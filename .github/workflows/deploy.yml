name: Deploy to VPS

on:
  push:
    branches:
      - main

env:
  SSH_PORT: ${{ secrets.SSH_PORT }}
  SERVER_URL: ${{ vars.SERVER_URL }}
  USERNAME: ${{ vars.USERNAME }}
  DEPLOY_PATH: /home/user/dplfld/diplomabackend/
  CONTAINER_NAME: diplomabackend
  ALLOWED_EXTERNAL_IPS: ${{ secrets.ALLOWED_EXTERNAL_IPS }}


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $SSH_PORT -H $SERVER_URL >> ~/.ssh/known_hosts


      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}


      - name: Pull latest code
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "cd $DEPLOY_PATH && git pull"


      - name: Stop and remove container
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "docker compose -f $DEPLOY_PATH/docker-compose.yml down || true"


      - name: Build Docker image
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "docker compose -f $DEPLOY_PATH/docker-compose.yml build"


      - name: Start container
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "
          export DJANGO_SETTINGS_MODULE='dplback.settings.prod' && \
          export ALLOWED_EXTERNAL_IPS='${ALLOWED_EXTERNAL_IPS}' && \
          docker compose -f $DEPLOY_PATH/docker-compose.yml up -d
          "


      - name: Check container status
        run: |
          sleep 5
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "
            STATUS=\$(docker inspect -f '{{.State.Status}}' $CONTAINER_NAME)
            if [ \"\$STATUS\" = \"running\" ]; then
              echo '[SUCCESS] Container is running and initialized.'
            else
              echo '[ERROR] Container is NOT running. Status: \$STATUS'
              docker logs $CONTAINER_NAME --tail 50
              exit 1
            fi
          "


      - name: ENV validation
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "
            echo '[INFO] Validating environment (DJANGO_SETTINGS_MODULE)...'
            ENV_MODE=\$(docker exec $CONTAINER_NAME printenv DJANGO_SETTINGS_MODULE)
            ALLOWED_IPS=\$(docker exec $CONTAINER_NAME printenv ALLOWED_EXTERNAL_IPS)
            echo \"[INFO] DJANGO_SETTINGS_MODULE=\$ENV_MODE\"
            echo \"[INFO] ALLOWED_EXTERNAL_IPS=\$ALLOWED_IPS\"

            if [ \"\$ENV_MODE\" != \"dplback.settings.prod\" ]; then
              echo '[ERROR] Server is NOT running in production mode!'
              # docker logs $CONTAINER_NAME --tail 50 || true
              docker compose -f $DEPLOY_PATH/docker-compose.yml down || true
              exit 1
            else
              echo '[SUCCESS] Server is running in production mode.'
            fi
          "


      - name: Health check
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "
            echo '[INFO] Performing health check...'
            HTTP_CODE=\$(curl -L -s -o /dev/null -w \"%{http_code}\" https://$SERVER_URL/health/)

            if [ \"\$HTTP_CODE\" -eq 200 ]; then
              echo '[SUCCESS] Health check passed.'
            else
              echo '[ERROR] Health check failed. Code: \$HTTP_CODE'
              echo '[INFO] Container logs (diplomabackend):'
              docker logs $CONTAINER_NAME --tail 50 || true
              echo '[INFO] Stopping all services via docker compose down...'
              docker compose -f $DEPLOY_PATH/docker-compose.yml down || true
              exit 1
            fi
          "


      - name: Docker system prune
        run: |
          ssh -p $SSH_PORT $USERNAME@$SERVER_URL "docker system prune -f"